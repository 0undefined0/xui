webpackJsonp([21],{"3Z/4":function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default={data:function(){return{base:"<template>\n  <x-button @click=\"notice\">default</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      notice () {\n        this.$notice('这是一条提醒~');\n      }\n    }\n  };\n<\/script>",title:"<template>\n  <x-button @click=\"notice\">有标题的</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      notice () {\n        this.$notice('这是一条提醒~', {\n          title: '俺是标题'\n        });\n      }\n    }\n  };\n<\/script>",types:"<template>\n  <x-button @click=\"default\">default</x-button>\n  <x-button @click=\"success\">success</x-button>\n  <x-button @click=\"warning\">warning</x-button>\n  <x-button @click=\"danger\">danger</x-button>\n  <x-button @click=\"dark\">dark</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      default () {\n        this.$notice('这是一条提醒~', {\n          title: '俺是标题'\n        });\n      },\n      success () {\n        this.$notice.success('这是一条提醒~', {\n          title: '俺是标题'\n        });\n      },\n      warning () {\n        this.$notice.warning('这是一条提醒~', {\n          title: '俺是标题'\n        });\n      },\n      danger () {\n        this.$notice.danger('这是一条提醒~', {\n          title: '俺是标题'\n        });\n      },\n      dark () {\n        this.$notice.dark('这是一条提醒~', {\n          title: '俺是标题'\n        });\n      }\n    }\n  };\n<\/script>",showClose:"<template>\n  <x-button @click=\"notice\">default</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      notice () {\n        this.$notice('我没有关闭按钮滴~', {\n          showClose: false\n        });\n      }\n    }\n  };\n<\/script>",setTimer:"<template>\n  <x-button @click=\"autoClose\">不自动关闭</x-button>\n  <x-button @click=\"autoClose\">十秒后自动关闭</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      // 取消自动关闭\n      autoClose () {\n        this.$notice('我是不自动关闭的~', {\n          timer: 0\n        });\n      },\n      // 十秒钟自动关闭\n      autoClose () {\n        this.$notice('十秒钟之后我将自己关闭', {\n          timer: 10000\n        });\n      }\n    }\n  };\n<\/script>",close1:"<template>\n  <x-button @click=\"showNotice\" v-if=\"!notice\">打开一个通知</x-button>\n  <x-button @click=\"closeNotice\" v-else>关闭通知</x-button>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        notice: ''\n      };\n    },\n    methods: {\n      showNotice () {\n        this.notice = this.$notice('新开的通知', {\n          timer: 0\n        });\n      },\n      closeNotice () {\n        this.notice();\n        this.notice = '';\n      }\n    }\n  };\n<\/script>",closeAllDemo:'<template>\n  <x-button @click="newNotice">打开一个通知</x-button>\n  <x-button @click="closeAll">关闭所有通知</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      newNotice () {\n        this.notice = this.$notice(\'新开的通知~\');\n      },\n      closeAll () {\n        // 不传 nmae就是关闭所有的通知\n        this.$notice.close();\n      }\n    }\n  };\n<\/script>',event:"<template>\n  <x-button @click=\"noticeEvent\">事件</x-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      noticeEvent () {\n        this.$notice('我传入了点击和关闭回调~', (vm) => {\n          alert('这条通知被点击了, 接收一个接收当前组件对象, 可以调用对象的 close 方法关闭窗口');\n          vm.close();\n        }, () => {\n          alert('关闭了');\n        });\n      }\n    }\n  };\n<\/script>",notice:"",apiData:[{attribute:"name",explain:"通知的唯一名称, 用于关闭时的参数",type:"String",values:"---",default:"---"},{attribute:"title",explain:"通知的标题",type:"String",values:"---",default:"---"},{attribute:"timer",explain:"通知自动关闭的时间",type:"Number",values:"----",default:"5000"},{attribute:"showIcon",explain:"显示icon",type:"Boolean",values:"true | false",default:"true"},{attribute:"showClose",explain:"显示关闭按钮",type:"Boolean",values:"true | false",default:"true"},{attribute:"icon",explain:"自定义通知的图标",type:"String",values:"---",default:"---"}]}},methods:{defaultFun:function(){this.$notice("这是一条提醒~")},haveTitle:function(){this.$notice("这是一条提醒~",{title:"俺是标题"})},typesNotice:function(t){this.$notice[t]("这是一条提醒~",{title:"俺是标题"})},hideClose:function(){this.$notice("我没有关闭按钮滴~",{showClose:!1})},timerClose:function(t){var n=t?"十秒钟之后我将自己关闭":"我是不自动关闭的";this.$notice(n,{timer:t})},showNotice:function(){this.notice=this.$notice("新开的通知",{timer:0})},closeNotice:function(){this.notice(),this.notice=""},newNotice:function(){this.notice=this.$notice("新开的通知~")},closeAll:function(){this.$notice.close()},noticeEvent:function(){this.$notice("我传入了点击和关闭回调~",function(t){alert("这条通知被点击了, 接收一个接收当前组件对象, 可以调用对象的 close 方法关闭窗口"),t.close()},function(){alert("关闭了")})}}}},NgLB:function(t,n,e){"use strict";var i=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[t._m(0),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("基础")]),t._v(" "),e("p",[t._v("this.$notice 为默认的提醒")]),t._v(" "),e("x-quote",[e("x-button",{on:{click:t.defaultFun}},[t._v("default")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.base))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("带标题的通知")]),t._v(" "),e("p",[t._v("可以通过配置 title 参数自定义标题")]),t._v(" "),e("x-quote",[e("x-button",{on:{click:t.haveTitle}},[t._v("有标题的")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.title))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("不同类型的通知提醒")]),t._v(" "),e("x-quote",[e("div",{staticClass:"x-inline margin-10"},[e("x-button",{on:{click:t.haveTitle}},[t._v("default")])],1),t._v(" "),t._l(t.$types,function(n){return"default"!==n&&"primary"!==n?e("div",{key:n,staticClass:"x-inline margin-10"},[e("x-button",{on:{click:function(e){t.typesNotice(n)}}},[t._v(t._s(n))])],1):t._e()}),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.types))])],2)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("取消关闭按钮")]),t._v(" "),e("p",[t._v("可以通过 showClose 设置是否显示右上角关闭按钮 - 默认显示")]),t._v(" "),e("x-quote",[e("x-button",{on:{click:t.hideClose}},[t._v("default")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.showClose))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("设置自动关闭的事件和取消自动关闭")]),t._v(" "),e("p",[t._v("可以通过 timer 设置通知的自动关闭时间, 如果设置成 0 则不自动关闭 - 默认5000(五秒)")]),t._v(" "),e("x-quote",[e("x-button",{on:{click:function(n){t.timerClose(0)}}},[t._v("不自动关闭")]),t._v(" "),e("x-button",{on:{click:function(n){t.timerClose(1e4)}}},[t._v("十秒后自动关闭")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.setTimer))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("关闭通知")]),t._v(" "),e("p",[t._v("打开一个通知后返回一个 close 函数, 调用函数可以关闭当前通知")]),t._v(" "),e("p",[t._v("同时也可给通知设置一个 name 属性(name必须为唯一的), 然后调用 this.$notice.close(name), 如果name不传则是关闭所有通知")]),t._v(" "),e("x-quote",[t.notice?e("x-button",{on:{click:t.closeNotice}},[t._v("关闭通知")]):e("x-button",{on:{click:t.showNotice}},[t._v("打开一个通知")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.close1))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("关闭所有通知")]),t._v(" "),e("p",[t._v("一键关闭清除所有通知")]),t._v(" "),e("x-quote",[e("x-button",{on:{click:t.newNotice}},[t._v("打开一个通知")]),t._v(" "),e("x-button",{on:{click:t.closeAll}},[t._v("关闭所有通知")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.closeAllDemo))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("点击和关闭事件")]),t._v(" "),e("p",[t._v("点击的回调函数接收一个接收当前组件对象, 可以调用对象的 close 方法关闭窗口")]),t._v(" "),e("x-quote",[e("x-button",{on:{click:t.noticeEvent}},[t._v("事件")]),t._v(" "),e("source-code",{staticClass:"margin-top-10",attrs:{type:"html"}},[t._v(t._s(t.event))])],1)],1),t._v(" "),e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("API")]),t._v(" "),e("h4",[t._v("params")]),t._v(" "),e("api-table",{attrs:{data:t.apiData,keys:t.$propsKeys}})],1)])},s=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"row"},[e("h3",{staticClass:"row-title"},[t._v("notice 通知提醒")]),t._v(" "),e("p",[t._v("在页面的右上角全局显示通知提醒信息 - 执行完后返回一个 close 函数, 调用此函数可以关闭弹窗")]),t._v(" "),e("ul",{staticClass:"function-list"},[e("li",[e("span",[t._v("this.$notice(message, options, clickBack, closeBack)")])]),t._v(" "),e("li",[e("span",[t._v("this.$notice.primary(message, options, clickBack, closeBack)")])]),t._v(" "),e("li",[e("span",[t._v("this.$notice.success(message, options, clickBack, closeBack)")])]),t._v(" "),e("li",[e("span",[t._v("this.$notice.warning(message, options, clickBack, closeBack)")])]),t._v(" "),e("li",[e("span",[t._v("this.$notice.danger(message, options, clickBack, closeBack)")])]),t._v(" "),e("li",[e("span",[t._v("this.$notice.dark(message, options, clickBack, closeBack)")])]),t._v(" "),e("li",[e("span",[t._v("this.$notice.close(name)")])])])])}],o={render:i,staticRenderFns:s};n.a=o},Y41j:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=e("3Z/4"),s=e.n(i),o=e("NgLB"),c=e("VU/8"),l=c(s.a,o.a,null,null,null);n.default=l.exports}});
//# sourceMappingURL=21.39e181620436efcbaa96.js.map